fragment CoordinationInfo on CoordinationType {
    coordinationType
    coordinationUuid
    coordinationName
    coordinationDescription
    assistantId
    assistantType
    additionalInstructions
    updatedBy
    createdAt
    updatedAt
}

fragment CoordinationListInfo on CoordinationListType {
    coordinationList{
        ...CoordinationInfo
    }
    pageSize
    pageNumber
    total
}

fragment CoordinationAgentInfo on CoordinationAgentType {
    coordination
    agentUuid
    agentName
    agentInstructions
    responseFormat
    jsonSchema
    tools
    predecessor
    successor
    updatedBy
    createdAt
    updatedAt
}

fragment CoordinationAgentListInfo on CoordinationAgentListType {
    coordinationAgentList{
        ...CoordinationAgentInfo
    }
    pageSize
    pageNumber
    total
}

fragment CoordinationSessionInfo on CoordinationSessionType {
    coordination
    sessionUuid
    threadId
    currentAgent
    lastAssistantMessage
    status
    log
    updatedBy
    createdAt
    updatedAt
}

fragment CoordinationSessionListInfo on CoordinationSessionListType {
    coordinationSessionList{
        ...CoordinationSessionInfo
    }
    pageSize
    pageNumber
    total
}

fragment CoordinationMessageInfo on CoordinationMessageType {
    coordinationSession
    messageId
    threadId
    coordinationAgent
    createdAt
    updatedAt
}

fragment CoordinationMessageListInfo on CoordinationMessageListType {
    coordinationMessageList{
        ...CoordinationMessageInfo
    }
    pageSize
    pageNumber
    total
}

query ping {
    ping
}

query getCoordination(
    $coordinationType: String!,
    $coordinationUuid: String!
) {
    coordination(
        coordinationType: $coordinationType,
        coordinationUuid: $coordinationUuid
    ) {
        ...CoordinationInfo
    }
}

query getCoordinationList(
    $pageNumber: Int, 
    $limit: Int,
    $coordinationType: String,
    $coordinationName: String,
    $coordinationDescription: String,
    $assistantId: String,
    $assistantTypes: [String]
) {
    coordinationList(
        pageNumber: $pageNumber,
        limit: $limit,
        coordinationType: $coordinationType,
        coordinationName: $coordinationName,
        coordinationDescription: $coordinationDescription,
        assistantId: $assistantId,
        assistantTypes: $assistantTypes
    ) {
        ...CoordinationListInfo
    }
}

mutation insertUpdateCoordination(
    $coordinationType: String!,
    $coordinationUuid: String,
    $coordinationName: String,
    $coordinationDescription: String,
    $assistantId: String,
    $assistantType: String,
    $additionalInstructions: String,
    $updatedBy: String!
) {
    insertUpdateCoordination(
        coordinationType: $coordinationType,
        coordinationUuid: $coordinationUuid,
        coordinationName: $coordinationName,
        coordinationDescription: $coordinationDescription,
        assistantId: $assistantId,
        assistantType: $assistantType,
        additionalInstructions: $additionalInstructions,
        updatedBy: $updatedBy
    ) {
        coordination{
            ...CoordinationInfo
        }
    }
}

mutation deleteCoordination(
    $coordinationType: String!,
    $coordinationUuid: String!
) {
    deleteCoordination(
        coordinationType: $coordinationType,
        coordinationUuid: $coordinationUuid
    ) {
        ok
    }
}

query getCoordinationAgent(
    $coordinationUuid: String!,
    $agentUuid: String!
) {
    coordinationAgent(
        coordinationUuid: $coordinationUuid,
        agentUuid: $agentUuid
    ) {
        ...CoordinationAgentInfo
    }
}

query getCoordinationAgentList(
    $pageNumber: Int, 
    $limit: Int,
    $coordinationUuid: String,
    $agentName: String,
    $coordinationTypes: [String],
    $responseFormat: String,
    $predecessor: String,
    $successor: String
) {
    coordinationAgentList(
        pageNumber: $pageNumber,
        limit: $limit,
        coordinationUuid: $coordinationUuid,
        agentName: $agentName,
        coordinationTypes: $coordinationTypes,
        responseFormat: $responseFormat,
        predecessor: $predecessor,
        successor: $successor
    ) {
        ...CoordinationAgentListInfo
    }
}

mutation insertUpdateCoordinationAgent(
    $coordinationUuid: String!,
    $agentUuid: String,
    $agentName: String,
    $agentInstructions: String,
    $coordinationType: String,
    $responseFormat: String,
    $jsonSchema: JSON,
    $tools: [JSON],
    $predecessor: String,
    $successor: String,
    $updatedBy: String!
) {
    insertUpdateCoordinationAgent(
        coordinationUuid: $coordinationUuid,
        agentUuid: $agentUuid,
        agentName: $agentName,
        agentInstructions: $agentInstructions,
        coordinationType: $coordinationType,
        responseFormat: $responseFormat,
        jsonSchema: $jsonSchema,
        tools: $tools,
        predecessor: $predecessor,
        successor: $successor,
        updatedBy: $updatedBy
    ) {
        coordinationAgent{
            ...CoordinationAgentInfo
        }
    }
}

mutation deleteCoordinationAgent(
    $coordinationUuid: String!,
    $agentUuid: String!
) {
    deleteCoordinationAgent(
        coordinationUuid: $coordinationUuid,
        agentUuid: $agentUuid
    ) {
        ok
    }
}

query getCoordinationSession(
    $coordinationUuid: String!,
    $sessionUuid: String!
) {
    coordinationSession(
        coordinationUuid: $coordinationUuid,
        sessionUuid: $sessionUuid
    ) {
        ...CoordinationSessionInfo
    }
}

query getCoordinationSessionList(
    $pageNumber: Int,
    $limit: Int,
    $coordinationUuid: String,
    $coordinationTypes: [String],
    $threadId: String,
    $currentAgentUuid: String,
    $statuses: [String],
) {
    coordinationSessionList(
        pageNumber: $pageNumber,
        limit: $limit,
        coordinationUuid: $coordinationUuid,
        coordinationTypes: $coordinationTypes,
        threadId: $threadId,
        currentAgentUuid: $currentAgentUuid,
        statuses: $statuses
    ) {
        ...CoordinationSessionListInfo
    }
}

mutation insertUpdateCoordinationSession(
    $coordinationUuid: String!,
    $sessionUuid: String,
    $coordinationType: String,
    $threadId: String,
    $currentAgentUuid: String,
    $lastAssistantMessage: String,
    $status: String,
    $log: String,
    $updatedBy: String!
) {
    insertUpdateCoordinationSession(
        coordinationUuid: $coordinationUuid,
        sessionUuid: $sessionUuid,
        coordinationType: $coordinationType,
        threadId: $threadId,
        currentAgentUuid: $currentAgentUuid,
        lastAssistantMessage: $lastAssistantMessage,
        status: $status,
        log: $log,
        updatedBy: $updatedBy
    ) {
        coordinationSession{
            ...CoordinationSessionInfo
        }
    }
}

mutation deleteCoordinationSession(
    $coordinationUuid: String!,
    $sessionUuid: String!
) {
    deleteCoordinationSession(
        coordinationUuid: $coordinationUuid,
        sessionUuid: $sessionUuid
    ) {
        ok
    }
}

query getCoordinationMessage(
    $sessionUuid: String!,
    $messageId: String!
) {
    coordinationMessage(
        sessionUuid: $sessionUuid,
        messageId: $messageId
    ) {
        ...CoordinationMessageInfo
    }
}

query getCoordinationMessageList(
    $pageNumber: Int,
    $limit: Int,
    $sessionUuid: String,
    $coordinationUuid: String,
    $threadId: String,
    $agentUuid: String
) {
    coordinationMessageList(
        pageNumber: $pageNumber,
        limit: $limit,
        sessionUuid: $sessionUuid,
        coordinationUuid: $coordinationUuid,
        threadId: $threadId,
        agentUuid: $agentUuid
    ) {
        ...CoordinationMessageListInfo
    }
}

mutation insertUpdateCoordinationMessage(
    $sessionUuid: String!,
    $messageId: String!,
    $coordinationUuid: String!,
    $threadId: String!,
    $agentUuid: String
) {
    insertUpdateCoordinationMessage(
        sessionUuid: $sessionUuid,
        messageId: $messageId,
        coordinationUuid: $coordinationUuid,
        threadId: $threadId,
        agentUuid: $agentUuid
    ) {
        coordinationMessage{
            ...CoordinationMessageInfo
        }
    }
}

mutation deleteCoordinationMessage(
    $sessionUuid: String!,
    $messageId: String!
) {
    deleteCoordinationMessage(
        sessionUuid: $sessionUuid,
        messageId: $messageId
    ) {
        ok
    }
}