fragment CoordinationInfo on CoordinationType {
    endpointId
    coordinationUuid
    coordinationName
    coordinationDescription
    assistantId
    additionalInstructions
    updatedBy
    createdAt
    updatedAt
}

fragment CoordinationListInfo on CoordinationListType {
    coordinationList{
        ...CoordinationInfo
    }
    pageSize
    pageNumber
    total
}

fragment AgentInfo on AgentType {
    coordination
    agentVersionUuid
    agentName
    agentInstructions
    responseFormat
    jsonSchema
    tools
    predecessor
    successor
    status
    updatedBy
    createdAt
    updatedAt
}

fragment AgentListInfo on AgentListType {
    agentList{
        ...AgentInfo
    }
    pageSize
    pageNumber
    total
}

fragment SessionInfo on SessionType {
    coordination
    sessionUuid
    threadIds
    status
    notes
    updatedBy
    createdAt
    updatedAt
}

fragment SessionListInfo on SessionListType {
    sessionList{
        ...SessionInfo
    }
    pageSize
    pageNumber
    total
}

fragment ThreadInfo on ThreadType {
    session
    threadId
    agent
    lastAssistantMessage
    status
    log
    createdAt
    updatedAt
}

fragment ThreadListInfo on ThreadListType {
    threadList{
        ...ThreadInfo
    }
    pageSize
    pageNumber
    total
}

query ping {
    ping
}

query getCoordination(
    $coordinationUuid: String!
) {
    coordination(
        coordinationUuid: $coordinationUuid
    ) {
        ...CoordinationInfo
    }
}

query getCoordinationList(
    $pageNumber: Int, 
    $limit: Int,
    $coordinationName: String,
    $coordinationDescription: String,
    $assistantId: String
) {
    coordinationList(
        pageNumber: $pageNumber,
        limit: $limit,
        coordinationName: $coordinationName,
        coordinationDescription: $coordinationDescription,
        assistantId: $assistantId
    ) {
        ...CoordinationListInfo
    }
}

mutation insertUpdateCoordination(
    $coordinationUuid: String,
    $coordinationName: String,
    $coordinationDescription: String,
    $assistantId: String,
    $additionalInstructions: String,
    $updatedBy: String!
) {
    insertUpdateCoordination(
        coordinationUuid: $coordinationUuid,
        coordinationName: $coordinationName,
        coordinationDescription: $coordinationDescription,
        assistantId: $assistantId,
        additionalInstructions: $additionalInstructions,
        updatedBy: $updatedBy
    ) {
        coordination{
            ...CoordinationInfo
        }
    }
}

mutation deleteCoordination(
    $coordinationUuid: String!
) {
    deleteCoordination(
        coordinationUuid: $coordinationUuid
    ) {
        ok
    }
}

query getAgent(
    $coordinationUuid: String!,
    $agentName: String,
    $agentVersionUuid: String
) {
    agent(
        coordinationUuid: $coordinationUuid,
        agentName: $agentName,
        agentVersionUuid: $agentVersionUuid
    ) {
        ...AgentInfo
    }
}

query getAgentList(
    $pageNumber: Int, 
    $limit: Int,
    $coordinationUuid: String,
    $agentName: String,
    $responseFormat: String,
    $predecessor: String,
    $successor: String
) {
    agentList(
        pageNumber: $pageNumber,
        limit: $limit,
        coordinationUuid: $coordinationUuid,
        agentName: $agentName,
        responseFormat: $responseFormat,
        predecessor: $predecessor,
        successor: $successor
    ) {
        ...AgentListInfo
    }
}

mutation insertUpdateAgent(
    $coordinationUuid: String!,
    $agentVersionUuid: String,
    $agentName: String!,
    $agentInstructions: String,
    $responseFormat: String,
    $jsonSchema: JSON,
    $tools: [JSON],
    $predecessor: String,
    $successor: String,
    $status: String,
    $updatedBy: String!
) {
    insertUpdateAgent(
        coordinationUuid: $coordinationUuid,
        agentVersionUuid: $agentVersionUuid,
        agentName: $agentName,
        agentInstructions: $agentInstructions,
        responseFormat: $responseFormat,
        jsonSchema: $jsonSchema,
        tools: $tools,
        predecessor: $predecessor,
        successor: $successor,
        status: $status,
        updatedBy: $updatedBy
    ) {
        agent{
            ...AgentInfo
        }
    }
}

mutation deleteAgent(
    $coordinationUuid: String!,
    $agentVersionUuid: String!
) {
    deleteAgent(
        coordinationUuid: $coordinationUuid,
        agentVersionUuid: $agentVersionUuid
    ) {
        ok
    }
}

query getSession(
    $coordinationUuid: String!,
    $sessionUuid: String!
) {
    session(
        coordinationUuid: $coordinationUuid,
        sessionUuid: $sessionUuid
    ) {
        ...SessionInfo
    }
}

query getSessionList(
    $pageNumber: Int,
    $limit: Int,
    $coordinationUuid: String,
    $statuses: [String],
) {
    sessionList(
        pageNumber: $pageNumber,
        limit: $limit,
        coordinationUuid: $coordinationUuid,
        statuses: $statuses
    ) {
        ...SessionListInfo
    }
}

mutation insertUpdateSession(
    $coordinationUuid: String!,
    $sessionUuid: String,
    $status: String,
    $notes: String,
    $updatedBy: String!
) {
    insertUpdateSession(
        coordinationUuid: $coordinationUuid,
        sessionUuid: $sessionUuid,
        status: $status,
        notes: $notes,
        updatedBy: $updatedBy
    ) {
        session{
            ...SessionInfo
        }
    }
}

mutation deleteSession(
    $coordinationUuid: String!,
    $sessionUuid: String!
) {
    deleteSession(
        coordinationUuid: $coordinationUuid,
        sessionUuid: $sessionUuid
    ) {
        ok
    }
}

query getThread(
    $sessionUuid: String!,
    $threadId: String!
) {
    thread(
        sessionUuid: $sessionUuid,
        threadId: $threadId
    ) {
        ...ThreadInfo
    }
}

query getThreadList(
    $pageNumber: Int,
    $limit: Int,
    $sessionUuid: String,
    $coordinationUuid: String,
    $agentName: String
) {
    threadList(
        pageNumber: $pageNumber,
        limit: $limit,
        sessionUuid: $sessionUuid,
        coordinationUuid: $coordinationUuid,
        agentName: $agentName
    ) {
        ...ThreadListInfo
    }
}

mutation insertUpdateThread(
    $sessionUuid: String!,
    $threadId: String!,
    $coordinationUuid: String!,
    $agentName: String,
    $lastAssistantMessage: String,
    $status: String,
    $log: String,
    $updatedBy: String!
) {
    insertUpdateThread(
        sessionUuid: $sessionUuid,
        threadId: $threadId,
        coordinationUuid: $coordinationUuid,
        agentName: $agentName,
        lastAssistantMessage: $lastAssistantMessage,
        status: $status,
        log: $log,
        updatedBy: $updatedBy
    ) {
        thread{
            ...ThreadInfo
        }
    }
}

mutation deleteThread(
    $sessionUuid: String!,
    $threadId: String!
) {
    deleteThread(
        sessionUuid: $sessionUuid,
        threadId: $threadId
    ) {
        ok
    }
}